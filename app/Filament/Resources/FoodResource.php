<?php

namespace App\Filament\Resources;

use App\Filament\Resources\FoodResource\Pages;
use App\Filament\Resources\FoodResource\RelationManagers;
use App\Models\Food;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Infolists\Components\Grid;
use Filament\Infolists\Components\ImageEntry;
use Filament\Infolists\Components\Section;
use Filament\Infolists\Components\TextEntry;
use Filament\Infolists\Infolist;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class FoodResource extends Resource
{
    protected static ?string $model = Food::class;
    protected static ?string $breadcrumb = 'tutu';
    protected static ?string $navigationLabel = 'label ne';
    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\TextInput::make('name')->disabled(),
                Forms\Components\TextInput::make('eng_name')
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\ImageColumn::make('image'),
                Tables\Columns\TextColumn::make('name')
                ->description(function ($record) {
                    return $record->subFoods->pluck('name')->implode(', ');
                }),
                Tables\Columns\TextColumn::make('price')
                ->state(function ($record) {
                    if ($record->price) {
                        return $record->price;
                    }
                    return $record->subFoods->min('price') . '-' .  $record->subFoods->max('price');
                })
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make()
                    ->successRedirectUrl(route('filament.admin.resources.food.index'))
                    ->slideOver()
                ->modalHeading('1233'),
                Tables\Actions\ViewAction::make()->modalHeading('333')
            ])
            ->bulkActions([
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function canCreate(): bool
    {
        return false; // TODO: Change the autogenerated stub
    }

    public static function infolist(Infolist $infolist): Infolist
    {
        return $infolist->schema([
            ImageEntry::make('image')
                ->width('500px')
                ->height('500px')
                ->label('')
                ->extraAttributes([
                    'loading' => 'lazy'
                ]),
            Section::make('body')
            ->schema([
                TextEntry::make('name')->alignCenter(),
                TextEntry::make('price'),
            ])
        ]);
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListFood::route('/'),
//            'create' => Pages\CreateFood::route('/create'),
//            'edit' => Pages\EditFood::route('/{record}/edit'),
        ];
    }
}
